{"version":3,"sources":["Popup.tsx","MoodPicker.tsx","Entry.tsx","VirtualizedList.tsx","EntriesTable.tsx"],"names":["useStyles","makeStyles","theme","outer","position","popup","display","flexDirection","justifyContent","minWidth","zIndex","padding","background","palette","paper","border","borderRadius","Popup","React","forwardRef","props","ref","classes","in","className","Zoom","children","container","alignSelf","margin","cursor","borderColor","focused","backgroundColor","setupItem","isActive","fontSize","alignItems","icon","width","height","isSelected","emoji","userSelect","fontWeight","value","opacity","EmojiIcon","onClick","role","aria-label","text","String","fromCodePoint","codePoint","RadioIcon","selectedValue","SvgIcon","viewBox","y","fill","MoodSetupItem","onChange","MoodPicker","useState","setFocus","selectedRow","setSelectedRow","popupRef","useRef","moodsArray","length","activeEmojiArray","filter","x","rowCounter","Fragment","tabIndex","event","stopPropagation","onFocus","onBlur","current","contains","document","activeElement","onKeyDown","key","clone","onMoodArrayChange","inputRef","focus","preventDefault","map","Typography","variant","color","align","paperStyle","options","borderWidth","primary","light","inner","flex","breakpoints","up","input","marginTop","hasCreationTime","minHeight","hasMoods","down","date","marginBottom","paddingBottom","hint","gap","whiteSpace","SubItem","setFocused","moodPickerFocused","setMoodPickerFocused","useEffect","undefined","creationTime","collapsed","autoFocus","Collapse","onExited","onCollapseExited","onEntered","window","getSelection","toString","moment","format","InputBase","fullWidth","multiline","placeholder","moodsText","onMoodsArrayChange","isEnabled","IconButton","size","onMouseDown","location","hash","Hidden","xsDown","deleteXsDown","smUp","deleteSmUp","disabled","example","onDelete","DateEntry","this","calendar","sameDay","lastDay","lastWeek","sameElse","Entry","initiallyCollapsed","entry","EntryModel","setCollapsed","colSpan","entryModel","onUpdate","setInitiallyCollapsed","data","EntryStatus","HIDDEN","show","moodsLeft","moodsRight","settings","i","emojiList","push","moodArrays","onEntryChanged","updatedEntry","alreadyFocused","isDataLoaded","lastChange","LastChange","EDIT_RIGHT","left","setLeft","target","leftHint","newLeftMoodArray","setMoodsLeft","Skeleton","right","setRight","_event","delete","rightHint","newRightMoodArray","setMoodsRight","VirtualizedItem","_ref","createRef","_resizeObserver","onHeightChanged","offsetHeight","ResizeObserver","observe","disconnect","ItemComponent","componentProps","PureComponent","VirtualizedList","scrollY","setScrollY","innerHeight","windowHeight","setWindowHeight","Map","realHeightsMap","setRealHeightsMap","memoisedComponentProps","useMemo","Object","values","useCallback","oldMap","newMap","set","keys","Set","entries","keysToDelete","forEach","_value","has","onResizeOrScroll","scrollableContainerRef","scrollTop","onscroll","addEventListener","removeEventListener","visibleEntries","currentHeight","placeholderTop","placeholderBottom","entryHeight","defaultHeight","get","unshift","PlaceholderComponent","Placeholder","rest","style","EntriesTable","withStyles","createStyles","scrollableContainer","overflow","willChange","grip","transitionDuration","transitionProperty","entriesTable","borderSpacing","verticalAlign","borderLeft","borderRight","secondary","buttonsContainer","borderBottom","buttons","state","canRedo","canUndo","onEntriesChanged","entriesWithDates","dateToInsert","currentCreationTime","getTime","getFullYear","getMonth","getDay","splice","setState","onKeyPress","e","model","undo","redo","addNewItemThrottled","scrollBy","_tableRef","_scrollableContainerRef","_columnResizer","_lastScrollTime","Date","now","top","requestAnimationFrame","timeSinceLastScroll","behavior","subscribe","assert","ColumnResizer","liveDrag","gripInnerHtml","onResize","dispatchEvent","Event","_","throttle","prevProps","unsubscribe","destroy","unobserve","navigator","platform","indexOf","handleFocusableElements","handleKeys","onKeyEvent","Grid","justify","spacing","item","xs","sm","appBarShown","onShowAppBar","Tooltip","title","isMacintosh","Button","cellPadding","cellSpacing"],"mappings":"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","file":"static/js/2.94487782.chunk.js","sourcesContent":["// Material ui popper is too slow buggy and overcomplicated.\n// Do not expect much from this popup. It doesn't respect screen boundaries etc.\n\nimport React from \"react\";\nimport { Zoom, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  outer: {\n    position: \"relative\",\n  },\n  popup: {\n    position: \"absolute\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    minWidth: 140,\n    zIndex: 2,\n    padding: 10,\n    background: theme.palette.background.paper,\n    border: \"gray solid 2px\",\n    borderRadius: 4,\n  },\n}));\n\nexport const Popup = React.forwardRef<\n  HTMLDivElement,\n  { children: JSX.Element | JSX.Element[]; in: boolean }\n>((props, ref) => {\n  const classes = useStyles();\n  if (!props.in) return null;\n  return (\n    <div ref={ref} className={classes.outer}>\n      <Zoom in={props.in}>\n        <div className={classes.popup}>{props.children}</div>\n      </Zoom>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Typography, makeStyles, SvgIcon } from \"@material-ui/core\";\nimport { Popup } from \"./Popup\";\nimport { MoodItem } from \"./Entry\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    alignSelf: \"flex-start\",\n    margin: 2,\n    cursor: \"pointer\",\n    borderColor: (focused) => (focused ? \"gray\" : \"#0000\"),\n    border: \"solid 2px\",\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  setupItem: {\n    border: \"2px solid\",\n    borderColor: (isActive) => (isActive ? \"darkgray\" : \"#0000\"),\n    borderRadius: 4,\n    fontSize: 20,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  icon: {\n    cursor: \"pointer\",\n    width: 15,\n    margin: 0,\n    padding: \"4px 1px\",\n    height: \"30px\",\n    border: \"1px solid #0000\",\n\n    borderColor: (isSelected) => (isSelected ? \"gray\" : \"#0000\"),\n  },\n\n  emoji: {\n    userSelect: \"none\",\n    fontWeight: (value) => (value === 3 ? \"bold\" : \"unset\"),\n    opacity: (value) => (value === 3 ? 1 : value === 2 ? 0.7 : 0.3),\n  },\n}));\n\nfunction EmojiIcon(\n  props: MoodItem & {\n    onClick?(): void;\n  }\n) {\n  const classes = useStyles(props.value);\n  return (\n    <span\n      onClick={props.onClick}\n      className={classes.emoji}\n      role=\"img\"\n      aria-label={props.text}\n    >\n      {String.fromCodePoint(props.codePoint)}\n    </span>\n  );\n}\n\nfunction RadioIcon(props: {\n  onClick(): void;\n  selectedValue: number;\n  value: number;\n}) {\n  const classes = useStyles(props.selectedValue === props.value);\n\n  const height = 5 * (3 - props.value) + 1;\n  return (\n    <SvgIcon\n      className={classes.icon}\n      viewBox=\"1 1 7 15\"\n      onClick={props.onClick}\n    >\n      <rect\n        y={height}\n        width=\"9\"\n        height={16 - height}\n        fill={props.value <= props.selectedValue ? \"red\" : \"lightGray\"}\n      />\n    </SvgIcon>\n  );\n}\n\nfunction MoodSetupItem(\n  props: MoodItem & {\n    onChange(value: number): void;\n    isActive: boolean;\n  }\n) {\n  const classes = useStyles(props.isActive);\n  return (\n    <div className={classes.setupItem}>\n      <EmojiIcon\n        value={3}\n        codePoint={props.codePoint}\n        text={props.text}\n        onClick={() => props.onChange((props.value + 1) % 4)}\n      />\n      <RadioIcon\n        onClick={() => props.onChange(0)}\n        selectedValue={props.value}\n        value={0}\n      />\n      <RadioIcon\n        onClick={() => props.onChange(1)}\n        selectedValue={props.value}\n        value={1}\n      />\n      <RadioIcon\n        onClick={() => props.onChange(2)}\n        selectedValue={props.value}\n        value={2}\n      />\n      <RadioIcon\n        onClick={() => props.onChange(3)}\n        selectedValue={props.value}\n        value={3}\n      />\n    </div>\n  );\n}\n\nexport function MoodPicker(props: {\n  moodsArray: MoodItem[];\n  onMoodArrayChange(newArray: MoodItem[]): void;\n  onFocus(): void;\n  onBlur(): void;\n  inputRef: React.RefObject<HTMLInputElement>;\n  text: string;\n}): JSX.Element | null {\n  const [focused, setFocus] = React.useState(false);\n\n  // eslint-disable-next-line prefer-const\n  let [selectedRow, setSelectedRow] = React.useState(-1);\n\n  const popupRef = React.useRef<HTMLDivElement>(null);\n  const classes = useStyles(focused);\n\n  const onClick = (event: React.MouseEvent) => {\n    event.stopPropagation();\n  };\n\n  const onFocus = () => {\n    props.onFocus();\n    setFocus(true);\n  };\n\n  const onBlur = () => {\n    if (\n      popupRef.current &&\n      !popupRef.current.contains(document.activeElement)\n    ) {\n      setFocus(false);\n      props.onBlur();\n    }\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === \"ArrowLeft\") {\n      if (selectedRow < 0) setSelectedRow((selectedRow = 0));\n      if (selectedRow < props.moodsArray.length) {\n        const clone = [...props.moodsArray];\n        clone[selectedRow].value--;\n        if (clone[selectedRow].value < 0) {\n          clone[selectedRow].value = 3;\n        }\n        props.onMoodArrayChange(clone);\n      }\n    } else if (event.key === \"ArrowRight\") {\n      if (selectedRow < 0) setSelectedRow((selectedRow = 0));\n      if (selectedRow < props.moodsArray.length) {\n        const clone = [...props.moodsArray];\n        clone[selectedRow].value++;\n        if (clone[selectedRow].value > 3) {\n          clone[selectedRow].value = 0;\n        }\n        props.onMoodArrayChange(clone);\n      }\n    } else if (event.key === \"ArrowDown\") {\n      selectedRow++;\n      if (selectedRow >= props.moodsArray.length) {\n        selectedRow = 0;\n      }\n      setSelectedRow(selectedRow);\n    } else if (event.key === \"ArrowUp\") {\n      selectedRow--;\n      if (selectedRow < 0) {\n        selectedRow = props.moodsArray.length - 1;\n      }\n      setSelectedRow(selectedRow);\n    } else if (event.key === \"Escape\" || event.key === \"Enter\") {\n      props.inputRef.current?.focus();\n    } else {\n      return;\n    }\n\n    event.preventDefault();\n  };\n\n  if (props.moodsArray.length === 0) return null;\n\n  const activeEmojiArray = props.moodsArray.filter((x) => x.value > 0);\n\n  let rowCounter = 0;\n\n  return (\n    <React.Fragment>\n      <div\n        tabIndex={0}\n        onClick={onClick}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        className={classes.container}\n        onKeyDown={onKeyDown}\n      >\n        {activeEmojiArray.length > 0 ? (\n          activeEmojiArray.map((x) => (\n            <EmojiIcon\n              key={x.codePoint}\n              codePoint={x.codePoint}\n              text={x.text}\n              value={x.value}\n            />\n          ))\n        ) : (\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            add mood\n          </Typography>\n        )}\n        <Popup in={focused} ref={popupRef}>\n          <Typography align=\"center\" variant=\"body1\">\n            {props.text}\n          </Typography>\n          <React.Fragment>\n            {props.moodsArray.map((x) => (\n              <MoodSetupItem\n                key={x.codePoint}\n                isActive={rowCounter++ === selectedRow}\n                codePoint={x.codePoint}\n                text={x.text}\n                value={x.value}\n                onChange={(value) => {\n                  props.onMoodArrayChange(\n                    props.moodsArray.map((y) =>\n                      y.codePoint === x.codePoint ? { ...y, value } : y\n                    )\n                  );\n                }}\n              />\n            ))}\n          </React.Fragment>\n          <Typography align=\"center\" variant=\"caption\">\n            Use arrow keys.\n          </Typography>\n        </Popup>{\" \"}\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport {\n  IconButton,\n  InputBase,\n  makeStyles,\n  Typography,\n  Collapse,\n  Hidden,\n  Theme,\n  Button,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport moment from \"moment\";\nimport { MoodPicker } from \"./MoodPicker\";\nimport { Popup } from \"./Popup\";\nimport { EntryModel, EntryStatus, LastChange } from \"./EntryModel\";\nimport { Settings, EmojiItem, HintData } from \"./Settings\";\n\nexport type MoodItem = EmojiItem & {\n  value: number;\n};\n\ninterface StyleOptions {\n  focused: boolean;\n  hasCreationTime: boolean;\n  hasMoods: boolean;\n}\n\nconst paperStyle = (theme: Theme) => ({\n  border: \"solid\",\n  borderRadius: 4,\n  backgroundColor: theme.palette.background.paper,\n  padding: (options: StyleOptions) => (options.focused ? 4 : 5),\n  borderWidth: (options: StyleOptions) => {\n    return options.focused === true ? 2 : 1;\n  },\n  borderColor: (options: StyleOptions) => {\n    return options.focused === true ? theme.palette.primary.light : \"gray\";\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  inner: {\n    display: \"flex\",\n    flex: 1,\n\n    flexDirection: \"column\",\n    position: \"relative\",\n    [theme.breakpoints.up(\"sm\")]: paperStyle(theme),\n  },\n  input: {\n    padding: \"0px 7px\",\n    marginTop: (options: StyleOptions) => (options.hasCreationTime ? 0 : 19),\n    minHeight: (options: StyleOptions) => (options.hasMoods ? 76 : 76 + 28),\n    alignItems: \"flex-start\",\n  },\n  outer: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    flexDirection: \"row\",\n    [theme.breakpoints.down(\"xs\")]: paperStyle(theme),\n  },\n  date: {\n    border: \"0px !important\",\n    marginBottom: \"0px !important\",\n    paddingBottom: \"0px !important\",\n  },\n  hint: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"10px\",\n    backgroundColor: theme.palette.background.paper,\n    whiteSpace: \"pre-line\",\n  },\n}));\n\ninterface SubItemProps {\n  onFocus(alreadyFocused: boolean): void;\n  moodsText: string;\n  moodsArray: MoodItem[];\n  onDelete(): void;\n  creationTime?: Date;\n  onMoodsArrayChange(moodsArray: MoodItem[]): void;\n  onCollapseExited?: (node: HTMLElement) => void;\n  collapsed: boolean;\n  example: boolean;\n  deleteXsDown?: boolean;\n  deleteSmUp?: boolean;\n  autoFocus: boolean;\n  hint?: HintData;\n  value: string;\n  onChange(event: { target: { value: string } }): void;\n}\n\nfunction SubItem(props: SubItemProps) {\n  const [focused, setFocused] = React.useState(false);\n  const [moodPickerFocused, setMoodPickerFocused] = React.useState(false);\n\n  React.useEffect(() => {\n    if (focused) {\n      props.onFocus(true);\n    }\n  }, [focused, props.onFocus]);\n\n  const classes = useStyles({\n    hasCreationTime: props.creationTime != undefined,\n    hasMoods: props.moodsArray.length > 0,\n    focused: focused || moodPickerFocused,\n  });\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const onFocus = () => {\n    setFocused(true);\n    props.onFocus(false);\n  };\n\n  const onBlur = () => {\n    setFocused(false);\n  };\n\n  const onMoodPickerFocused = () => {\n    props.onFocus(false);\n    setMoodPickerFocused(true);\n  };\n\n  const onMoodPickerBlur = () => {\n    setMoodPickerFocused(false);\n  };\n\n  React.useEffect(() => {\n    if (!props.collapsed && props.autoFocus) {\n      inputRef.current?.focus();\n    }\n  }, [props.collapsed, props.autoFocus]);\n\n  return (\n    <Collapse\n      in={!props.collapsed}\n      onExited={props.onCollapseExited}\n      onEntered={() => {\n        if (props.autoFocus) {\n          inputRef.current?.focus();\n        }\n      }}\n    >\n      <div className={classes.outer}>\n        <div\n          className={classes.inner}\n          onClick={() => {\n            if (window.getSelection()?.toString().length === 0) {\n              inputRef.current?.focus();\n            }\n          }}\n        >\n          {props.creationTime && (\n            <Typography variant=\"caption\" color=\"textSecondary\" align=\"center\">\n              {moment(props.creationTime).format(\"h:mm a\")}\n            </Typography>\n          )}\n\n          <InputBase\n            className={classes.input}\n            fullWidth\n            multiline\n            placeholder={props.hint != undefined ? props.hint.text : \"\"}\n            inputRef={inputRef}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            value={props.value}\n            onChange={props.onChange}\n          />\n          <MoodPicker\n            text={props.moodsText}\n            onMoodArrayChange={props.onMoodsArrayChange}\n            moodsArray={props.moodsArray}\n            inputRef={inputRef}\n            onFocus={onMoodPickerFocused}\n            onBlur={onMoodPickerBlur}\n          ></MoodPicker>\n          {props.hint != null &&\n            props.hint.isEnabled &&\n            props.value.length > 0 && (\n              <Popup in={focused}>\n                <Typography className={classes.hint} color=\"textSecondary\">\n                  {props.hint?.text}\n                  <IconButton size=\"small\" onMouseDown={() => { window.location.hash = \"settings\" }}><EditIcon /></IconButton>\n                </Typography>\n              </Popup>\n            )}\n        </div>\n\n        <Hidden xsDown={!props.deleteXsDown} smUp={!props.deleteSmUp}>\n          <IconButton\n            disabled={props.example}\n            aria-label=\"delete\"\n            size=\"small\"\n            onClick={props.onDelete}\n          >\n            <DeleteIcon\n              color={props.example ? \"disabled\" : \"action\"}\n              fontSize=\"small\"\n            ></DeleteIcon>\n          </IconButton>\n        </Hidden>\n      </div>\n    </Collapse>\n  );\n}\n\nexport class DateEntry {\n  key: string;\n  text: string;\n  focused = false;\n  constructor(date: Date) {\n    this.key = this.text = moment(date).calendar({\n      sameDay: \"[Today], MMM Do, ddd\",\n      lastDay: \"[Yesterday] , MMM Do, ddd\",\n      lastWeek: \"MMM Do YYYY, ddd\",\n      sameElse: \"MMM Do YYYY, ddd\",\n    });\n  }\n}\n\ninterface EntryProps {\n  onFocus?(): void;\n  onUpdate(entry: EntryModel, omitHistory: boolean): void;\n  entry: EntryModel | DateEntry;\n  settings?: Settings;\n  example: boolean;\n}\n\nexport const Entry = React.forwardRef<HTMLTableRowElement, EntryProps>(\n  (props, ref) => {\n    const classes = useStyles({\n      focused: false,\n      hasCreationTime: false,\n      hasMoods: false,\n    });\n\n    const initiallyCollapsed: boolean =\n      !(props.entry instanceof EntryModel) || props.entry.initiallyCollapsed;\n    const [collapsed, setCollapsed] = React.useState(initiallyCollapsed);\n    React.useEffect(() => {\n      if (initiallyCollapsed) {\n        setCollapsed(false);\n      }\n    }, [initiallyCollapsed]);\n\n    if (!(props.entry instanceof EntryModel)) {\n      return (\n        <tr ref={ref} className={classes.date}>\n          <td colSpan={2}>\n            <Collapse in={!collapsed}>\n              <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n                {props.entry.text}\n              </Typography>\n            </Collapse>\n          </td>\n        </tr>\n      );\n    }\n\n    const entryModel = props.entry as EntryModel;\n\n    React.useEffect(() => {\n      if (entryModel.initiallyCollapsed) {\n        props.onUpdate(entryModel.setInitiallyCollapsed(false), true);\n      }\n    }, [entryModel, props.onUpdate]);\n\n    React.useEffect(() => {\n      if (entryModel.data === EntryStatus.HIDDEN)\n        props.onUpdate(entryModel.show(), true);\n    });\n\n    const moodsLeft: MoodItem[] = [];\n    const moodsRight: MoodItem[] = [];\n\n    if (props.settings != null) {\n      for (let i = 0; i < props.settings.emojiList.length; i++) {\n        moodsLeft.push({\n          value:\n            entryModel.moodArrays[0][i] == null\n              ? 0\n              : entryModel.moodArrays[0][i],\n          ...props.settings.emojiList[i],\n        });\n        moodsRight.push({\n          value:\n            entryModel.moodArrays[1][i] == null\n              ? 0\n              : entryModel.moodArrays[1][i],\n          ...props.settings.emojiList[i],\n        });\n      }\n    }\n\n    const onEntryChanged = (updatedEntry: EntryModel) => {\n      props.onUpdate(updatedEntry, false);\n    };\n\n    const onFocus = (alreadyFocused: boolean) => {\n      if (entryModel.focused)\n        props.onUpdate(entryModel.setFocused(false), true);\n      if (!alreadyFocused && props.onFocus) props.onFocus();\n    };\n\n    return (\n      <tr ref={ref}>\n        <td key=\"issueElement\">\n          {entryModel.isDataLoaded() ? (\n            <SubItem\n              autoFocus={\n                entryModel.focused &&\n                entryModel.lastChange !== LastChange.EDIT_RIGHT\n              }\n              creationTime={entryModel.creationTime}\n              value={entryModel.left}\n              onChange={(event: { target: { value: string } }) =>\n                onEntryChanged(entryModel.setLeft(event.target.value))\n              }\n              onFocus={onFocus}\n              onDelete={() => {\n                setCollapsed(true);\n              }}\n              deleteXsDown\n              example={props.example}\n              collapsed={collapsed}\n              hint={props.settings?.leftHint}\n              moodsText=\"How do you feel now?\"\n              moodsArray={moodsLeft}\n              onMoodsArrayChange={(newLeftMoodArray: MoodItem[]) =>\n                onEntryChanged(\n                  entryModel.setMoodsLeft(newLeftMoodArray.map((x) => x.value))\n                )\n              }\n            ></SubItem>\n          ) : (\n            <Skeleton variant=\"rect\" height={135}></Skeleton>\n          )}\n        </td>\n\n        <td key=\"resolutionElement\">\n          {entryModel.isDataLoaded() ? (\n            <SubItem\n              autoFocus={\n                entryModel.focused &&\n                entryModel.lastChange === LastChange.EDIT_RIGHT\n              }\n              value={entryModel.right}\n              onChange={(event: { target: { value: string } }) =>\n                onEntryChanged(entryModel.setRight(event.target.value))\n              }\n              onFocus={onFocus}\n              deleteSmUp\n              example={props.example}\n              onDelete={() => {\n                setCollapsed(true);\n              }}\n              collapsed={collapsed}\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              onCollapseExited={(_event: unknown) =>\n                props.onUpdate(entryModel.delete(), false)\n              }\n              hint={props.settings?.rightHint}\n              moodsText=\"How do you feel after writing resolution?\"\n              moodsArray={moodsRight}\n              onMoodsArrayChange={(newRightMoodArray: MoodItem[]) =>\n                onEntryChanged(\n                  entryModel.setMoodsRight(\n                    newRightMoodArray.map((x) => x.value)\n                  )\n                )\n              }\n            />\n          ) : (\n            <Skeleton variant=\"rect\" height={135}></Skeleton>\n          )}\n        </td>\n      </tr>\n    );\n  }\n);\n","import React from \"react\";\n\ninterface VirtualizedItemProps<Entry, ComponentProps, RefType> {\n  onHeightChanged(entry: Entry, heigh: number): void;\n  entry: Entry;\n  ItemComponent: React.ForwardRefExoticComponent<\n    ComponentProps & { entry: Entry } & React.RefAttributes<RefType>\n  >;\n  componentProps: ComponentProps;\n}\n\nclass VirtualizedItem<\n  Entry,\n  ComponentProps,\n  RefType extends HTMLElement\n> extends React.PureComponent<\n  VirtualizedItemProps<Entry, ComponentProps, RefType>\n> {\n  private _ref = React.createRef<RefType>();\n  _resizeObserver?: ResizeObserver;\n\n  private onHeightChanged = () => {\n    if (this._ref.current) {\n      this.props.onHeightChanged(\n        this.props.entry,\n        this._ref.current.offsetHeight\n      );\n    }\n  };\n\n  componentDidMount() {\n    if (this._ref.current) {\n      this._resizeObserver = new ResizeObserver(this.onHeightChanged);\n      this._resizeObserver.observe(this._ref.current);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n      this._resizeObserver = undefined;\n    }\n  }\n\n  render() {\n    const { ItemComponent, componentProps, entry } = this.props;\n\n    return <ItemComponent ref={this._ref} entry={entry} {...componentProps} />;\n  }\n}\n\ninterface VirtualizedListProps<Entry, ItemComponentProps, RefType> {\n  entries: Entry[];\n  defaultHeight: number;\n  scrollableContainerRef: React.RefObject<HTMLDivElement>;\n  ItemComponent: React.ForwardRefExoticComponent<\n    ItemComponentProps & { entry: Entry } & React.RefAttributes<RefType>\n  >;\n  PlaceholderComponent: React.ComponentType<{ height: number }>;\n  componentProps: ItemComponentProps;\n  example: boolean;\n}\n\nexport function VirtualizedList<\n  Entry extends { key: string; focused: boolean },\n  ItemComponentProps,\n  RefType extends HTMLElement\n>(\n  props: VirtualizedListProps<Entry, ItemComponentProps, RefType>\n): JSX.Element {\n  const [scrollY, setScrollY] = React.useState(0);\n  const [windowHeight, setWindowHeight] = React.useState(window.innerHeight);\n\n  const [realHeightsMap, setRealHeightsMap] = React.useState(new Map());\n  // Beware of maintainig VirtualizedItem pureness during refactoring.\n  // If one entry has changed it shouldn't lead to render() calls for other\n  // entries.\n\n  const memoisedComponentProps = React.useMemo(\n    () => ({ ...props.componentProps }),\n    Object.values(props.componentProps)\n  );\n\n  const onHeightChanged = React.useCallback((entry, height) => {\n    setRealHeightsMap((oldMap) => {\n      const newMap = new Map(oldMap);\n\n      newMap.set(entry.key, height);\n      return newMap;\n    });\n  }, []);\n\n  const keys = new Set(props.entries.map((x) => x.key));\n  const keysToDelete: string[] = [];\n  realHeightsMap.forEach((_value, key) => {\n    if (!keys.has(key)) {\n      keysToDelete.push(key);\n    }\n  });\n  if (keysToDelete.length > 0) {\n    setRealHeightsMap((oldMap) => {\n      const newMap = new Map(oldMap);\n      keysToDelete.forEach((key) => {\n        if (oldMap.has(key)) newMap.delete(key);\n      });\n      return newMap;\n    });\n  }\n\n  const onResizeOrScroll = () => {\n    if (props.scrollableContainerRef.current)\n      setScrollY(props.scrollableContainerRef.current.scrollTop);\n    setWindowHeight(window.innerHeight);\n  };\n\n  React.useEffect(() => {\n    if (props.scrollableContainerRef.current)\n      props.scrollableContainerRef.current.onscroll = onResizeOrScroll;\n    window.addEventListener(\"resize\", onResizeOrScroll);\n    return () => {\n      window.removeEventListener(\"resize\", onResizeOrScroll);\n    };\n  });\n\n  const visibleEntries: JSX.Element[] = [];\n  let currentHeight = 0;\n  let placeholderTop = 0;\n  let placeholderBottom = 0;\n\n  for (const entry of props.entries) {\n    let entryHeight = props.defaultHeight;\n    if (realHeightsMap.has(entry.key)) {\n      entryHeight = realHeightsMap.get(entry.key);\n    }\n\n    if (\n      !props.example &&\n      currentHeight + entryHeight < scrollY - window.innerHeight\n    ) {\n      if (entry.focused && !!props.scrollableContainerRef.current) {\n        props.scrollableContainerRef.current.scrollTop = currentHeight;\n      }\n\n      placeholderTop += entryHeight;\n    } else if (!!props.example || currentHeight < scrollY + 2 * windowHeight) {\n      visibleEntries.push(\n        <VirtualizedItem\n          key={entry.key}\n          onHeightChanged={onHeightChanged}\n          entry={entry}\n          ItemComponent={props.ItemComponent}\n          componentProps={memoisedComponentProps}\n        />\n      );\n    } else {\n      if (entry.focused && props.scrollableContainerRef.current) {\n        props.scrollableContainerRef.current.scrollTop = currentHeight;\n      }\n\n      placeholderBottom += entryHeight;\n    }\n    currentHeight += entryHeight;\n  }\n  if (placeholderTop !== 0) {\n    visibleEntries.unshift(\n      <props.PlaceholderComponent\n        height={placeholderTop}\n        key=\"placeholderTop\"\n      />\n    );\n  }\n\n  if (placeholderBottom !== 0) {\n    visibleEntries.push(\n      <props.PlaceholderComponent\n        height={placeholderBottom}\n        key=\"placeholderBottom\"\n      />\n    );\n  }\n\n  return <React.Fragment>{visibleEntries}</React.Fragment>;\n}\n","import React from \"react\";\nimport { Entry, DateEntry } from \"./Entry\";\nimport ColumnResizer from \"column-resizer\";\nimport _ from \"lodash\";\n\nimport {\n  withStyles,\n  createStyles,\n  WithStyles,\n  Button,\n  IconButton,\n  Grid,\n  Theme,\n  Tooltip,\n} from \"@material-ui/core\";\n\nimport { VirtualizedList } from \"./VirtualizedList\";\n\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport { ArrowDropDown as ArrowIcon } from \"@material-ui/icons\";\n\nimport {\n  EntriesTableModel,\n  EntriesSubscriptionCallback,\n} from \"./EntriesTableModel\";\nimport { EntryModel } from \"./EntryModel\";\nimport { Settings } from \"./Settings\";\nimport assert from \"assert\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    scrollableContainer: {\n      overflow: (props: { example: boolean }) =>\n        props.example ? \"hide\" : \"auto\",\n      flex: 1,\n      willChange: \"transform\",\n    },\n    grip: {\n      \"&:hover\": {\n        backgroundColor: \"#00F8\",\n        transitionDuration: \"0s\",\n      },\n      width: 8,\n      zIndex: 10,\n      position: \"absolute\",\n      height: \"100%\",\n      backgroundColor: \"#0000\",\n      cursor: \"col-resize\",\n      transitionProperty: \"background-color\",\n      transitionDuration: \"1s\",\n    },\n    entriesTable: {\n      width: \"100%\",\n      borderSpacing: 0,\n      \"& td\": {\n        padding: 2,\n        verticalAlign: \"top\",\n        borderLeft: \"5px solid #0000\",\n        // ColumnResizer sets it to \"hidden\". This cuts MoodPicker popups.\n        overflow: \"inherit !important\",\n      },\n      \"& td:nth-child(odd)\": {\n        borderRight: \"5px solid #0000\",\n        borderLeft: \"20px solid #0000\",\n      },\n\n      [theme.breakpoints.down(\"xs\")]: {\n        \"& thead\": {\n          display: \"none\",\n        },\n\n        \"& tbody tr\": {\n          display: \"grid\",\n          padding: 5,\n          marginBottom: 5,\n          borderRadius: 4,\n          border: \"1px solid\",\n          borderColor: theme.palette.text.secondary,\n        },\n\n        \"& td:nth-child(odd)\": {\n          borderRight: 0,\n          borderLeft: 0,\n        },\n\n        \"& tbody td\": {\n          display: \"block\",\n          borderLeft: 0,\n        },\n      },\n    },\n\n    buttonsContainer: {\n      backgroundColor: theme.palette.background.paper,\n      borderBottom: \"1px solid lightGray\",\n    },\n\n    buttons: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  });\n\nfunction Placeholder(props: { height: number }) {\n  const { height, ...rest } = props;\n  return (\n    <tr {...rest}>\n      <td colSpan={2}>\n        <div style={{ height }} />\n      </td>\n    </tr>\n  );\n}\n\ninterface EntriesTableProps extends WithStyles<typeof styles> {\n  example: boolean;\n  model: EntriesTableModel;\n  appBarShown?: boolean;\n  onShowAppBar?(): void;\n  onFocus?(): void;\n}\n\ninterface EntriesTableState {\n  entries: (EntryModel | DateEntry)[];\n  settings?: Settings;\n  canRedo: boolean;\n  canUndo: boolean;\n}\n\nconst EntriesTable = withStyles(styles)(\n  class extends React.PureComponent<EntriesTableProps, EntriesTableState> {\n    state: EntriesTableState = {\n      entries: [],\n      canRedo: false,\n      canUndo: false,\n    };\n\n    private onEntriesChanged: EntriesSubscriptionCallback = (\n      entries,\n      settings,\n      { canRedo, canUndo }\n    ) => {\n      const entriesWithDates: (EntryModel | DateEntry)[] = [...entries];\n      if (entries.length > 0) {\n\n        let dateToInsert = entries[entries.length - 1].creationTime;\n        for (let i = entries.length - 2; i >= 0; i--) {\n          const currentCreationTime = entries[i].creationTime;\n\n          if (dateToInsert == null) {\n            dateToInsert = currentCreationTime;\n            continue;\n          }\n\n          if (\n            !this.props.example &&\n            (currentCreationTime == null ||\n              currentCreationTime.getTime() < dateToInsert.getTime())\n          ) {\n            continue;\n          }\n\n          if (\n            currentCreationTime != null &&\n            currentCreationTime.getFullYear() === dateToInsert.getFullYear() &&\n            currentCreationTime.getMonth() === dateToInsert.getMonth() &&\n            currentCreationTime.getDay() === dateToInsert.getDay()\n          ) {\n            continue;\n          }\n\n          entriesWithDates.splice(i + 1, 0, new DateEntry(dateToInsert));\n          dateToInsert = currentCreationTime;\n        }\n\n        if (dateToInsert != null) {\n          entriesWithDates.splice(0, 0, new DateEntry(dateToInsert));\n        }\n      }\n\n      this.setState({ entries: entriesWithDates, settings, canRedo, canUndo });\n    };\n\n    private scrollBy(top: number) {\n      requestAnimationFrame(() => {\n        if (this._scrollableContainerRef.current == null) return;\n        const timeSinceLastScroll = Date.now() - this._lastScrollTime;\n        this._lastScrollTime = Date.now();\n\n        this._scrollableContainerRef.current.scrollBy({\n          top,\n          behavior: timeSinceLastScroll > 300 ? \"smooth\" : \"auto\",\n        });\n      });\n    }\n\n    private onKeyPress: (key: string, e: React.KeyboardEvent) => void = (\n      key,\n      e\n    ) => {\n      if (key === \"ctrl+z\" || key === \"cmd+z\") {\n        this.props.model.undo();\n        e.preventDefault();\n      } else if (\n        key === \"ctrl+y\" ||\n        key === \"cmd+y\" ||\n        key === \"ctrl+shift+z\" ||\n        key === \"cmd+shift+z\"\n      ) {\n        this.props.model.redo();\n        e.preventDefault();\n      } else if (key === \"ctrl+enter\" || key === \"cmd+enter\") {\n        this.props.model.addNewItemThrottled();\n        e.preventDefault();\n      } else {\n        // When focused item goes out of |VirtualizedList| browsers reset active element to\n        // |docuent.body| and keypresses \"pageup/pagedown/up/down\" stop scrolling\n        // |scrollableContainer|.\n        // The code below is a workaround for that.\n\n        // Since |target| is focusable it is not |document.body|, hence this dirty workaround is\n        // unnecessary.\n        if ((e.target as HTMLElement).tabIndex === 0) return;\n\n        if (key === \"pageup\") {\n          this.scrollBy(-window.innerHeight * 0.8);\n          e.preventDefault();\n        } else if (key === \"pagedown\") {\n          this.scrollBy(window.innerHeight * 0.8);\n          e.preventDefault();\n        } else if (key === \"down\") {\n          this.scrollBy(100);\n          e.preventDefault();\n        } else if (key === \"up\") {\n          this.scrollBy(-100);\n          e.preventDefault();\n        }\n      }\n    };\n\n    private _tableRef = React.createRef<HTMLTableElement>();\n    private _scrollableContainerRef = React.createRef<HTMLDivElement>();\n    private _columnResizer?: ColumnResizer;\n    private _resizeObserver?: ResizeObserver;\n    private _lastScrollTime = Date.now();\n\n    componentDidMount() {\n      this.props.model.subscribe(this.onEntriesChanged);\n\n      if (this.props.example) return;\n\n      assert(this._tableRef.current);\n      this._columnResizer = new ColumnResizer(this._tableRef.current, {\n        liveDrag: true,\n        minWidth: 100,\n        gripInnerHtml: `<div class='${this.props.classes.grip}'></div>`,\n        onResize: () => {\n          // TextArea adjusts its height only when the browser window\n          // resizes. It ignores resize of its parent.\n          // This logic is encapsulated badly, you cannot change\n          // it without modifying library sources.\n          //\n          // So, the esiest way of forcing TextArea height adjustment is\n          // to dispatch a window resize event hoping that it\n          // won't break anything.\n          window.dispatchEvent(new Event(\"resize\"));\n        },\n      });\n\n      // this._columnResizer doesn't observe resizes of the table.\n      // It listens for browser window \"resize\" events instead.\n      // This doesn't play well when table content asynchronously adjusts\n      // its height listening for the same \"resize\" event.\n      window.removeEventListener(\"resize\", this._columnResizer.onResize);\n      this._resizeObserver = new ResizeObserver(\n        _.throttle(() => {\n          this._columnResizer?.onResize();\n        }, 200)\n      );\n      this._resizeObserver.observe(this._tableRef.current);\n    }\n\n    componentDidUpdate(prevProps: EntriesTableProps) {\n      if (this.props.model !== prevProps.model) {\n        prevProps.model.unsubscribe(this.onEntriesChanged);\n        this.props.model.subscribe(this.onEntriesChanged);\n      }\n    }\n\n    componentWillUnmount() {\n      this.props.model.unsubscribe(this.onEntriesChanged);\n\n      if (this.props.example) return;\n\n      this._columnResizer?.destroy();\n      if (this._tableRef.current)\n        this._resizeObserver?.unobserve(this._tableRef.current);\n    }\n\n    private isMacintosh() {\n      return navigator.platform.indexOf(\"Mac\") > -1;\n    }\n\n    render() {\n      return (\n        <React.Fragment>\n          <KeyboardEventHandler\n            handleFocusableElements\n            handleKeys={[\n              \"ctrl+z\",\n              \"cmd+z\",\n              \"ctrl+shift+z\",\n              \"cmd+shift+z\",\n              \"ctrl+y\",\n              \"cmd+y\",\n              \"ctrl+enter\",\n              \"cmd+enter\",\n              \"up\",\n              \"down\",\n              \"pagedown\",\n              \"pageup\",\n            ]}\n            onKeyEvent={this.onKeyPress}\n          />\n          {!this.props.example && (\n            <Grid\n              className={this.props.classes.buttonsContainer}\n              container\n              justify=\"space-between\"\n              spacing={0}\n            >\n              <Grid item xs={1} sm={2}>\n                {!this.props.appBarShown && (\n                  <IconButton size=\"small\" onClick={this.props.onShowAppBar}>\n                    <ArrowIcon color=\"primary\" />\n                  </IconButton>\n                )}\n              </Grid>\n              <Grid className={this.props.classes.buttons} item xs={6} sm={3}>\n                <Tooltip\n                  title={this.isMacintosh() ? \"Cmd + Enter\" : \"Ctrl + Enter\"}\n                >\n                  <span>\n                    <Button\n                      size=\"small\"\n                      onClick={() => {\n                        this.props.model.addNewItemThrottled();\n                      }}\n                    >\n                      Add new item\n                    </Button>\n                  </span>\n                </Tooltip>\n              </Grid>\n              <Grid className={this.props.classes.buttons} item xs={5} sm={2}>\n                <Tooltip title={this.isMacintosh() ? \"Cmd + Z\" : \"Ctrl + Z\"}>\n                  <span>\n                    <Button\n                      fullWidth\n                      size=\"small\"\n                      onClick={this.props.model.undo}\n                      disabled={!this.state.canUndo}\n                    >\n                      Undo\n                    </Button>\n                  </span>\n                </Tooltip>\n                <Tooltip\n                  title={\n                    this.isMacintosh() ? \"Cmd + Shift + Z\" : \"Ctrl + Shift + Z\"\n                  }\n                >\n                  <span>\n                    <Button\n                      fullWidth\n                      size=\"small\"\n                      disabled={!this.state.canRedo}\n                      onClick={this.props.model.redo}\n                    >\n                      Redo\n                    </Button>\n                  </span>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          )}\n\n          <div\n            ref={this._scrollableContainerRef}\n            className={this.props.classes.scrollableContainer as string}\n          >\n            <table\n              cellPadding={0}\n              cellSpacing={0}\n              className={this.props.classes.entriesTable}\n              ref={this._tableRef}\n            >\n              {/* ColumnResizer doesn't work without thead */}\n              <thead>\n                <tr>\n                  <th></th>\n                  <th></th>\n                </tr>\n              </thead>\n\n              <tbody>\n                <VirtualizedList\n                  entries={this.state.entries}\n                  ItemComponent={Entry}\n                  PlaceholderComponent={Placeholder}\n                  scrollableContainerRef={this._scrollableContainerRef}\n                  componentProps={{\n                    onUpdate: this.props.model.onUpdate,\n                    onFocus: this.props.onFocus,\n                    settings: this.state.settings,\n                    example: this.props.example,\n                  }}\n                  example={this.props.example}\n                  defaultHeight={80}\n                />\n              </tbody>\n            </table>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n);\n\nexport default EntriesTable;\n"],"sourceRoot":""}